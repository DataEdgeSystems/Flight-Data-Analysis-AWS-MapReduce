Lists of commands used to run project codeCommands for setting up cluster in fully distributed mode1. In amazon ws management console, Launch all the instances you need for the cluster setup
2. Check if java is installed using the command java –version. It is installed by default in most of the instance types.
3. Install Hadoop on all nodes using the command    	tar zxvf ~/Downloads/hadoop-* -C /usr/local
4. Install oozie having latest version of oozie-4.1.0 and unzip it using "tar -zxvf oozie-4.1.0.tar.gz" 5. Install maven having latest version of apache maven 3.3.3 and unzip it using "tar -zxvf  apache-maven-3.3.3.tar.gz"
6. Name the first instance as Namenode and the other instances as slavenode
7. Modify the hostname by giving command "sudo hostname public-dns" on every instance.
8. To modify it permanently  in the host file, use the following commands  "sudo vi /etc/hosts".  In the hosts file add your "private ip" address and you "public dns".
9. Transfer the .pem file to all of the instance using the scp command.Changes in Hadoop environment variables 1. Set the environment variables by configuring them in the bashrc file.    Use VI editor vi .bashrc and enter the following configuration settings    export HADOOP_CONF=/home/ubuntu/hadoop/conf    export HADOOP_PREFIX=/home/ubuntu/hadoop    export JAVA_HOME=/usr/lib/jvm/java-7-oracle    export PATH=$PATH:$HADOOP_PREFIX/bin2. Check if the environment variables are set using the following commands    source ~/.bashrc    echo $HADOOP_PREFIX    echo $HADOOP_CONF3. Add permission to the authorized keys folder     chmod 644 .ssh/authorized_keys    chmod 400 .pem file    ssh-add .pem fileChanges in the Hadoop configuration for fully distributed mode.1. Move to the Hadoop folder.     Set java_home in hadoop-env.sh by adding the correct path to java home as below. export JAVA_HOME=/usr/lib/jvm/java-7-oracle    2. Create a temporary directory at home by command "mkdir hdfstmp"Make following changes in core-site.xml : <configuration><property><name>fs.default.name</name><value>hdfs://public dns:8020</value></property><property><name>hadoop.tmp.dir</name><value>/home/ubuntu/hdfstmp</value></property></configuration> 3.Make the following changes in  hdfs-site.xml<configuration><property><name>dfs.replication</name><value>2</value></property><property><name>dfs.permissions</name><value>false</value></property></configuration>4.Make the following changes in  mapred-site.xml<configuration><property><name>mapred.job.tracker</name><value>hdfs://public dns:8021</value></property></configuration>5.Repeat the same configurations settings in your slaves node using command .Instead of editing you can also copy these files from master to each of the slave.Make sure to give the respective public dns for each of the slaves."scp hadoop-env.sh core-site.xml hdfs-site.xml mapred-site.xml.template ubuntu@public dns:/home/ubuntu/hadoop/etc/hadoop" one by one.Run the Hadoop Namenode and datanode1. Format namenode and data node using the command, in the respective nodes    	 "hdfs namenode -format"   	  "hdfs datanode -format".2. Move to Hadoop folder and give the command "sbin/start-dfs.sh". Use the command "jps" to show the namenode and datanodes running on your instance. 3. Create new directory to hold the input file to /user/ubuntu using the command "hdfs dfs -mkdir /user" -> "hdfs dfs -mkdir /user/ubuntu" 4. Transfer input file using the command "hdfs dfs -put input input1"5. To execute the program in Hadoop using the command"hadoop jar project.jar project.airlines input output1 output2 output3"6. Check your output using the command "Hadoop fs cat output1/part-r-00000" for each of the outputs.Configurations for building and executing Oozie1. To build oozie use the command – this will build all the projects in your oozie source folder and will create the binary distribution of the projects."bin/mkditro.sh ñDskipTests"2. Create a new folder called oozie to move our binary distribution to an individual folder.3. Copy the folder to new folder oozie by command "cp -R oozie-4.1.0/distro/target/oozie-4.1.0-distro/oozie-4.1.0/ oozie"4. Create a new directory in oozie folder "mkdir libext"5. Copy the hadooplibs to libext using the command "cp oozie-4.1.0/hadooplibs/hadooplib-2.3.0.oozie-4.1.0/* libext/"6. Update the following in /hadoop/etc/hadoop/core-site.xml <property><name>hadoop.proxyuser.ubuntu.hosts</name><value>localhost</value></property><property><name>hadoop.proxyuser.ubuntu.groups</name><value>hadoop</value></property>7. To install oozie use the command "/bin/oozie-setup.sh prepare-war" 8. Create sharelib on HDFS by command "./bin/oozie-setup.sh sharelib create -fs hdfs://localhost:54310"This will set up CATALINA_OPTS="$CATALINA_OPTS -Xmx1024m"the destination path for sharelib is: /user/hduser/share/lib9. Use the following command to create the SQL  file  "./bin/ooziedb.sh create -sqlfile oozie.sql ñrun"10. Use the following command to start oozie "./bin/oozied.sh start"11. Use the following command to run oozie "./bin/oozied.sh run"12. Check the status of Oozie use the following command: "./bin/oozie admin -oozie http://localhost:11000/oozie -status"